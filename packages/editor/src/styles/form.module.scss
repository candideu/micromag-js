@import '~@micromag/core/scss/variables';

.container {
    display: flex;
    position: relative;
    flex-direction: column;

    .top,
    .content {
        width: 100%;
    }

    .top {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        padding: $spacer / 4;
        background: $gray-400;
        color: $gray-600;
    }

    .settings {
        margin-left: auto;
    }

    .breadcrumb {
        flex-grow: 1;
        width: 100%;
        overflow: hidden;
        font-size: 0.75rem;
    }

    .content {
        display: flex;
        position: relative;
        flex-direction: column;
        flex-grow: 1;
        overflow: hidden;
    }

    .empty {
        flex-grow: 1;
        margin: $spacer / 2;
    }

    %disabled {
        position: absolute;
        z-index: 0;
        top: 0;
        left: 0;
        width: 100%;
    }

    .panel {
        position: relative;
        min-height: 100%;

        &.enterRight,
        &.enterLeft,
        &.enterTop,
        &.enterBottom {
            z-index: 1;
            opacity: 0.5;
        }

        &.enterRight {
            transform: translate(100%, 0);
        }

        &.enterLeft {
            transform: translate(-100%, 0);
        }

        &.enterTop {
            transform: translate(0, -100%);
        }

        &.enterBottom {
            transform: translate(0, 100%);
        }

        &.enterActiveHorizontal,
        &.enterActiveVertical {
            transform: translate(0, 0);
            opacity: 1;
        }

        &.enterActiveHorizontal {
            transition: transform 0.2s ease-out, opacity 0.2s ease-out;
        }

        &.enterActiveVertical {
            transition: transform 0.5s ease-out, opacity 0.5s ease-out;
        }

        &.leave {
            @extend %disabled;
            transform: translate(0, 0);
            opacity: 1;
        }

        &.leaveActiveRight,
        &.leaveActiveLeft {
            transition: transform 0.2s ease-out, opacity 0.2s ease-out;
            opacity: 0.5;
        }

        &.leaveActiveTop,
        &.leaveActiveBottom {
            transition: transform 0.5s ease-out, opacity 0.5s ease-out;
            opacity: 0.5;
        }

        &.leaveActiveRight {
            transform: translate(-100%, 0);
        }

        &.leaveActiveLeft {
            transform: translate(100%, 0);
        }

        &.leaveActiveTop {
            transform: translate(0, 100%);
        }

        &.leaveActiveBottom {
            transform: translate(0, -100%);
        }
    }

    .content {
        .panel,
        .panels {
            transition: transform 0.2s ease-out, opacity 0.2s ease-out;
        }

        .panels {
            @extend %disabled;
            transform: translate(100%, 0);
        }

        &.hasPanels {
            .panel {
                @extend %disabled;
                transform: translate(-100%, 0);
            }

            .panels {
                position: relative;
                transform: translate(0, 0);
            }
        }
    }
}
