// stylelint-disable max-nesting-depth

@import '~@micromag/core/scss/variables';
@import '~@micromag/core/scss/placeholders';

.container {
    position: relative;

    .items,
    .item {
        padding: 0;
        margin: 0;
        list-style: none;
    }

    .items {
        display: flex;
        width: 100%;
        flex-direction: row;
        align-items: center;
        justify-content: flex-end;
    }

    .item {
        flex: 1 1 0;

        // max-width: 20px;

        .button {
            @extend %reset-button;

            display: block;
            width: 100%;
            padding: 10px 2px;
        }

        .dot {
            display: block;
            width: 100%;
            height: 2px;
            border-radius: 2px;
        }

        &:last-child {
            margin-right: 0;
        }
    }

    .menu {
        position: relative;
        display: flex;
        width: 16px;
        height: 16px;
        box-sizing: content-box;
        flex-wrap: wrap;
        padding-left: 10px;
    }

    .menuIcon {
        display: block;
        height: 100%;
    }

    .menuButton {
        @extend %fullscreen;
        @extend %reset-button;
        @extend %focus-outline;
    }

    .closeButton {
        @extend %reset-button;
        @extend %focus-outline;

        display: flex;
        align-items: center;
        padding-left: 10px;
        font-size: 26px;
    }

    &.vertical {
        flex-direction: column;
        background: transparent;

        .items {
            width: auto;
            height: 100%;
            flex-direction: column;
        }

        .item {
            // max-width: none;
            // max-height: 20px;

            .button {
                width: auto;
                height: 100%;
                padding: 2px 10px;
            }

            .dot {
                width: 2px;
                height: 100%;
            }
        }

        .menu {
            position: absolute;
            top: 10px;
            right: 10px;
            padding-left: 0;
        }
    }

    &.withShadow {
        background: linear-gradient(rgb(0 0 0 / 40%), rgb(0 0 0 / 0%));
    }
}
