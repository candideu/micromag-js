// stylelint-disable max-nesting-depth
// stylelint-disable no-descending-specificity

@import '~@micromag/core/scss/variables';
@import '~@micromag/core/scss/placeholders';

.container {
    @extend %reset-viewer;

    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    background-color: $black;
    color: $white;

    &.landscape {
        .screenContainer {
            top: 0;
            // right: auto;
            bottom: 0;
            left: 50%;
            margin: auto;
            transform: translate(-50%, 0);
        }
    }
    // opacity: 0.2;
    //         cursor: pointer;

    //         &:hover,
    //         &:focus-visible {
    //             opacity: 0.3;
    //         }

    //         &.visible {
    //             transform: translate(0, 0);
    //         }

    //         &.current {
    //             transform: translate(-50%, 0);
    //             opacity: 1;
    //             cursor: auto;
    //         }
    //     }

    //     &.withSiblings .screenContainer {
    //         transition: transform 0.3s ease, opacity 0.3s ease;
    //     }
    // }

    &.hideMenu {
        .menuNavContainer {
            pointer-events: none;
        }

        .menuTopContainer,
        .dots {
            opacity: 0;
        }
    }

    &.ready {
        .menuNavContainer,
        .menuPreviewContainer {
            visibility: visible;
        }
    }
}

.content {
    position: absolute;
    z-index: 1;
    width: 100%;
    height: 100%;
    overflow: hidden;
    user-select: none;
}

// Viewer Menu: Two buttons, the "menu dots", the menu overlays

.menuNavContainer {
    visibility: hidden;
    position: absolute;
    z-index: 3;
    top: 0;
    right: 50%;
    width: 100%;
    transform: translateX(50%);
    touch-action: none;
    transition:
        opacity 0.5s $ease-in-out-sine,
        background-image 0.5s $ease-in-out-sine;

    // if playing a media and the controls are "collapsed", fade the buttons, too
    .fadeMenu & {
        opacity: 0.25;
    }

    &.withShadow {
        background-image: linear-gradient(rgba(0, 0, 0, 0.75), rgb(0, 0, 0, 0));

        .fadeMenu & {
            background-image: linear-gradient(rgba(0, 0, 0, 0), rgb(0, 0, 0, 0));
        }
    }

    &.isMenuOpened {
        opacity: 1;

        &.withShadow {
            background-image: linear-gradient(rgba(0, 0, 0, 0.75), rgb(0, 0, 0, 0));
        }
    }
}

// .fadeMenu {
//     .menuNavContainer {
//         &.withShadow {
//             background-image: linear-gradient(rgba(0, 0, 0, 0), rgb(0, 0, 0, 0));
//         }
//     }
// }

.menuTopContainer {
    display: flex;
    align-items: center;
    padding: 8px 10px 0;
    transition: opacity 0.25s ease;
}

.menuItem {
    display: block;
}

.menuButton {
    @extend %reset-button;
    @extend %focus-outline;

    display: flex;
    align-items: center;
    transform-origin: 0 50%;
    border-radius: 0;
}

.menuIcon {
    display: block;
    width: 1rem;
    height: auto;
}

.menuShare {
    margin-right: auto;
}

.dots {
    position: relative;
    z-index: 3;
    padding: 0 8px;
    transition: opacity 0.3s $ease-out-ramp;

    .isMenuOpened & {
        opacity: 0;
        pointer-events: none;
    }
}

.menuPreviewContainer {
    @extend %fullscreen;
    visibility: hidden;
    z-index: 4;
    top: -100%;
    color: $white;
    background-color: rgba($black, 0.5);
    backdrop-filter: blur(0.75rem);
}

.menuPreviewInner {
    @extend %fullscreen;
}

.menuPreview {
    @extend %fullscreen;

    left: 50%;
    transform: translateX(-50%);
}

// Viewer Navigation: Left/Right icons on desktop

.navButton {
    display: none;
    visibility: hidden;
    position: absolute;
    z-index: 3;
    top: 50%;
    border: 0;
    transform: translateY(-50%);

    &.previous {
        left: 1rem;
    }

    &.next {
        right: 1rem;
    }

    @media screen and (min-width: 1024px) {
        display: block;
        visibility: visible;
    }
}

.screenContainer {
    @extend %fullscreen;
    @extend %focus-outline;

    display: flex;
    height: 100%;

    .screen {
        @extend %fullscreen;
        pointer-events: none;
    }

    &.current {
        .screen {
            pointer-events: auto;
            touch-action: none;
        }
    }
}

.transitionContainer {
    @extend %fullscreen;
}

// Playback Controls for Video/Audio screen types

.playbackControls {
    position: absolute;
    z-index: 2;
    bottom: 0;
    left: 0;
    width: 100%;
    pointer-events: none;
}

// Embedded webpage in iframe (article screen)
.webView {
    z-index: 10;
}
